devtools::install_github("rstudio/sparklyr")
install.packages(c("arules", "arulesViz", "BAS", "BBmisc", "curl", "dendextend", "earth", "expm", "filehash", "fitdistrplus", "fmsb", "gbm", "ggedit", "ggpubr", "ggsci", "goftest", "gstat", "jsonlite", "lava", "lava.tobit", "maptools", "mclust", "mets", "missMDA", "ncdf4", "pbkrtest", "pec", "polyclip", "prodlim", "psych", "RandomFieldsUtils", "randomForestSRC", "RcppEigen", "replyr", "repr", "rgdal", "rgeos", "rgl", "riskRegression", "rmarkdown", "scatterplot3d", "sigr", "sourcetools", "SparseM", "spatstat", "stringi", "survival", "systemfit", "viridis", "viridisLite", "wrapr", "WVPlots", "XML"))
install.packages(c("arules", "arulesViz", "BAS", "BBmisc", "curl", "dendextend", "earth", "expm", "filehash", "fitdistrplus", "fmsb", "gbm", "ggedit", "ggpubr", "ggsci", "goftest", "gstat", "jsonlite", "lava", "lava.tobit", "maptools", "mclust", "mets", "missMDA", "ncdf4", "pbkrtest", "pec", "polyclip", "prodlim", "psych", "RandomFieldsUtils", "randomForestSRC", "RcppEigen", "replyr", "repr", "rgdal", "rgeos", "rgl", "riskRegression", "rmarkdown", "scatterplot3d", "sigr", "sourcetools", "SparseM", "spatstat", "stringi", "survival", "systemfit", "viridis", "viridisLite", "wrapr", "WVPlots", "XML"))
install.packages(c("nycflights13", "Lahman"))
library(sparklyr)
library(dplyr)
sc <- spark_connect(master = "local", version = "2.1.0")
library(sparklyr)
library(dplyr)
sc <- spark_connect(master = "local")
sc <- spark_connect(master = "local")
spark_install()
sc <- spark_connect(master = "local")
spark_disconnect(sc)
library(sparklyr)
library(dplyr)
sc <- spark_connect(master = "local")
library(sparklyr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(sparklyr)
library(dplyr)
library(ggplot2)
library(tidyr)
set.seed(100)
spark_install("2.0.1")
sc <- spark_connect(master = "local")
sc <- spark_connect(master = "local")
library(sparklyr)
library(dplyr)
library(ggplot2)
library(tidyr)
set.seed(100)
sc <- spark_connect(master = "local")
library(sparklyr)
library(dplyr)
sc <- spark_connect(master = "local")
install.packages(c("nycflights13", "Lahman"))
library(dplyr)
iris_tbl <- copy_to(sc, iris)
flights_tble <- copy_to(sc, nycflights13::flights, "flights")
flights_tbl <- copy_to(sc, nycflights13::flights, "flights")
flights_tbl <- copy_to(sc, nycflights13::flights, "flights", overwrite = TRUE)
batting_tble <- copy_to(sc, lahman::Batting, "batting")
batting_tble <- copy_to(sc, Lahman::Batting, "batting")
src_tbls(sc)
batting_tbl <- copy_to(sc, Lahman::Batting, "batting", overwrite = TRUE)
src_tbls(sc)
flights_tbl %>% filter(carrier == "UA")
flights_tbl %>%
select(carrier, origin,dest, distance)
flights_tbl %>%
select(carrier, origin,dest, distance) %>%
head()
flights_tbl %>%
select(carrier, origin,dest, distance) %>%
head
spark_web(sc)
library(DBI)
flight_preview <- dbGetQuery(sc, "SELECT * from flights LIMIT 15")
flight_preview
flight_preview <- dbGetQuery(sc, "SELECT * from flights LIMIT 5")
flight_preview
flights_tbl %>%
select(carrier, origin,dest, distance,) %>%
head
flights_tbl %>%
select(carrier, origin,dest, distance,) %>%
head()
iris_tbl <- copy_to(sc, iris)
flights_tbl <- copy_to(sc, nycflights13::flights, "flights")
flights_tbl %>% filter(carrier == "UA")
flights_tbl %>%
select(carrier, origin,dest, distance,) %>%
head()
flights_tbl %>%
select(carrier, origin,dest, distance) %>%
head()
flight_preview <- dbGetQuery(sc, "SELECT * from flights LIMIT 5")
flight_preview
spark_disconnect(sc)
cdata <- read.csv("C:/Users/Dell/Desktop/DAT650/Project/Credit_Data.xls")
cdata <- read.csv("C:/Users/Dell/Desktop/DAT650/Project/Credit_Data.xls",header = T)
cdata <- read.table("C:/Users/Dell/Desktop/DAT650/Project/Credit_Data.xls",header = T)
cdata <- read.table("C:/Users/Dell/Desktop/DAT650/Project/Credit_Data.xls",header = T, sep = '')
cdata <- read.("C:/Users/Dell/Desktop/DAT650/Project/Credit_Data.xls",header = T, sep = '')
cdata <- read.table("C:/Users/Dell/Desktop/DAT650/Project/Credit_Data.xls",header = T, sep = '')
cdata <- read.csv("C:/Users/Dell/Desktop/DAT650/Project/credit.csv",header = T, sep = '')
View(cdata)
cdata <- read.csv("C:/Users/Dell/Desktop/DAT650/Project/credit.csv",header = T)
View(cdata)
cdata1 <- cdata[-1]
View(cdata1)
cdata1$DEFAULT <- as.factor(ifelse(cdata1$DEFAULT == 1, "Default", "Non Default")
cdata1$DEFAULT <- as.factor(ifelse(cdata1$DEFAULT == 1, "Default", "Non Default"))
cdata1$DEFAULT <- as.factor(ifelse(cdata1$DEFAULT == 1, "Default", "Non Default"))
library(plotly)
cdata1 %>% plot_ly(x = cdata1$DEFAULT, type = "histogram")
cdata1 %>% plot_ly(x = cdata1$DEFAULT, type = "histogram")
cdata1 %>% plot_ly(x = cdata1$DEFAULT, type = "surface") %>% layout(title = "Histogram of Default vs Non-Default")
cdata1 %>% plot_ly(x = cdata1$DEFAULT, type = "histogram2d") %>% layout(title = "Histogram of Default vs Non-Default")
cdata1 %>% plot_ly(x = cdata1$DEFAULT, type = "bar") %>% layout(title = "Histogram of Default vs Non-Default")
cdata1 %>% plot_ly(x = cdata1$DEFAULT, type = "box") %>% layout(title = "Histogram of Default vs Non-Default")
cdata1 %>% plot_ly(x = cdata1$DEFAULT, type = "heatmap") %>% layout(title = "Histogram of Default vs Non-Default")
cdata1 %>% plot_ly(x = cdata1$DEFAULT, type = "histogram") %>% layout(title = "Histogram of Default vs Non-Default")
cdata_df %>% plot_ly(x = ~AGE, y = ~AMOUNT, color = ~DEFAULT, colors = c("red", "blue"), type = "scatter", mode = "markers" )
cdata1 %>% plot_ly(x = ~AGE, y = ~AMOUNT, color = ~DEFAULT, colors = c("red", "blue"), type = "scatter", mode = "markers" )
cdata1 %>% plot_ly(x = ~AGE, y = ~AMOUNT, color = ~DEFAULT, colors = c("red", "blue"), type = "scatter", mode = "markers" )
cdata1 %>% plot_ly(x = ~AGE, y = ~AMOUNT, color = ~DEFAULT, colors = c("red", "green"), type = "scatter", mode = "markers" )
cdata1 %>% plot_ly(x = ~AGE, y = ~AMOUNT, color = ~DEFAULT, colors = c("grey", "green"), type = "scatter", mode = "markers" )
cdata1 %>% plot_ly(x = ~AGE, y = ~AMOUNT, color = ~DEFAULT, colors = c("grey", "blue"), type = "scatter", mode = "markers" )
library(magrittr)
cdata1 %>% plot_ly(x = ~AGE, y = ~DEFAULT, color = ~DEFAULT, colors = c("grey", "blue"), type = "scatter", mode = "markers" )
cdata1 %>% plot_ly(x = ~AGE, y = ~DEFAULT, color = ~DEFAULT, colors = c("grey", "blue"), type = "box", mode = "markers" )
cdata1 %>% plot_ly(x = ~AGE, y = ~DEFAULT, color = ~DEFAULT, colors = c("grey", "blue"), type = "bar", mode = "markers" )
cdata1 %>% plot_ly(x = ~AGE, y = ~AMOUNT, color = ~DEFAULT, colors = c("grey", "blue"), type = "scatter", mode = "markers" )
str(cdata1)
library(plotly)
library(magrittr)
cdata <- read.csv("C:/Users/Dell/Desktop/DAT650/Project/credit.csv",header = T)
cdata1 <- cdata[-1]
cdata1$DEFAULT <- as.factor(ifelse(cdata1$DEFAULT == 1, "Default", "Non Default"))
str(cdata1)
cdata1$PURPOSE <- as.factor(ifelse(cdata1$NEW_CAR == 1,1, ""))
cdata1$PURPOSE <- as.factor(ifelse(cdata1$NEW_CAR == 1,1, ""))
cdata1$PURPOSE <- as.factor(ifelse(cdata1$USED_CAR == 1,2, ""))
cdata1$PURPOSE <- as.factor(ifelse(cdata1$FURNITURE == 1,3, ""))
cdata1$PURPOSE <- as.factor(ifelse(cdata1$RADIO.TV == 1,4, ""))
cdata1$PURPOSE <- as.factor(ifelse(cdata1$EDUCATION == 1,5, ""))
cdata1$PURPOSE <- as.factor(ifelse(cdata1$RETRAINING == 1,6, ""))
cdata1
View(cdata1)
cdata1$PURPOSE <- (ifelse(cdata1$NEW_CAR == 1,1, ""))
cdata1$PURPOSE <- (ifelse(cdata1$USED_CAR == 1,2, ""))
cdata1$PURPOSE <- (ifelse(cdata1$FURNITURE == 1,3, ""))
cdata1$PURPOSE <- (ifelse(cdata1$RADIO.TV == 1,4, ""))
cdata1$PURPOSE <- (ifelse(cdata1$EDUCATION == 1,5, ""))
cdata1$PURPOSE <- (ifelse(cdata1$RETRAINING == 1,6, ""))
cdata1
View(cdata1)
str(cdata1)
library(plotly)
library(magrittr)
cdata <- read.csv("C:/Users/Dell/Desktop/DAT650/Project/credit.csv",header = T)
cdata1 <- cdata[-1]
str(cdata1)
cdata1$PURPOSE <- ifelse(cdata1$NEW_CAR == 1,1,ifelse(cdata1$USED_CAR == 1,2,
ifelse(cdata1$FURNITURE == 1,3,ifelse(cdata1$RADIO.TV == 1,4,
ifelse(cdata1$EDUCATION == 1,5, ifelse(cdata1$RETRAINING == 1,6, ""))))))
cdata1
View(cdata1)
str(cdata1)
cdata1 <- cdata1(2,3,10,11)
cdata1 <- cdata1[[2,3,10,11]
cdata1 <- cdata1[2,3,10,11]
cdata1 <- cdata1[2,3,10,11]
cdata2 <- cdata1[2,3,10,11]
cdata2 <- cdata1(2,3)
var2 <- cdata1(2,3, 10,11)
var2 <- c(cdata1(2,3, 10,11))
var2 <- cdata1(c(2,3, 10,11))
var2 <- cdata1[c(2,3, 10,11)]
View(var2)
cdata2 <- cdata1[c(2,3, 10,11,12,13)]
View(cdata2)
cdata1$STATUS <- ifelse(cdata1$MALE_DIV,1,ifelse(cdata1$MALE_SINGLE== 1,2,
ifelse(cdata1$MALE_MAR_or_WID == 1,3, "")))
str(cdata1)
cdata1
View(cdata1)
cdata1$STATUS <- ifelse(cdata1$MALE_DIV,1,ifelse(cdata1$MALE_SINGLE== 1,2,
ifelse(cdata1$MALE_MAR_or_WID == 1,3, 0)))
cdata1
View(cdata1)
cdata2 <- cdata1[c(2,3, 10,11,12,13,31,32,33)]
View(cdata2)
cdata2 <- cdata1[c(2,3,10,11,12,13,19,21,22,25,26,27,28,31,32,33)]
View(cdata2)
cdata2 <- cdata1[c(2,3,32,10,11,12,13,33,19,21,22,25,26,27,28,31)]
View(cdata2)
library(plotly)
library(magrittr)
library(plotly)
install.packages("plotly")
library(plotly)
install.packages("Rcpp")
library(plotly)
library(magrittr)
cdata <- read.csv("C:/Users/Dell/Desktop/DAT650/Project/credit.csv",header = T)
cdata1 <- cdata[-1]
cdata1$DEFAULT <- as.factor(ifelse(cdata1$DEFAULT == 1, "Default", "Non Default"))
cdata1 %>% plot_ly(x = cdata1$DEFAULT, type = "histogram") %>% layout(title = "Histogram of Default vs Non-Default")
cdata1 %>% plot_ly(x = ~AGE, y = ~AMOUNT, color = ~DEFAULT, colors = c("grey", "blue"), type = "scatter", mode = "markers" )
%>% layout(title = "Age vs creditAmount by Loan Default")
str(cdata1)
cdata1$PURPOSE <- ifelse(cdata1$NEW_CAR == 1,1,ifelse(cdata1$USED_CAR == 1,2,
ifelse(cdata1$FURNITURE == 1,3,ifelse(cdata1$RADIO.TV == 1,4,
ifelse(cdata1$EDUCATION == 1,5, ifelse(cdata1$RETRAINING == 1,6, ""))))))
cdata1$STATUS <- ifelse(cdata1$MALE_DIV,1,ifelse(cdata1$MALE_SINGLE== 1,2,
ifelse(cdata1$MALE_MAR_or_WID == 1,3, 0)))
head(cdata1)
cdata1$DEBTORS <- ifelse(cdata1$CO.APPLICANT,1,ifelse(cdata1$GUARANTOR== 1,2,0))
library(plotly)
library(magrittr)
cdata <- read.csv("C:/Users/Dell/Desktop/DAT650/Project/credit.csv",header = T)
cdata1 <- cdata[-1]
cdata1$DEFAULT <- as.factor(ifelse(cdata1$DEFAULT == 1, "Default", "Non Default"))
cdata1 %>% plot_ly(x = cdata1$DEFAULT, type = "histogram") %>% layout(title = "Histogram of Default vs Non-Default")
cdata1 %>% plot_ly(x = ~AGE, y = ~AMOUNT, color = ~DEFAULT, colors = c("grey", "blue"), type = "scatter", mode = "markers" )
%>% layout(title = "Age vs creditAmount by Loan Default")
str(cdata1)
cdata1$PURPOSE <- ifelse(cdata1$NEW_CAR == 1,1,ifelse(cdata1$USED_CAR == 1,2,
ifelse(cdata1$FURNITURE == 1,3,ifelse(cdata1$RADIO.TV == 1,4,
ifelse(cdata1$EDUCATION == 1,5, ifelse(cdata1$RETRAINING == 1,6, ""))))))
cdata1$STATUS <- ifelse(cdata1$MALE_DIV,1,ifelse(cdata1$MALE_SINGLE== 1,2,
ifelse(cdata1$MALE_MAR_or_WID == 1,3, 0)))
cdata1$DEBTORS <- ifelse(cdata1$CO.APPLICANT,1,ifelse(cdata1$GUARANTOR== 1,2,0))
cdata1$PROPERTY <- ifelse(cdata1$REAL_ESTATE,1,ifelse(cdata1$PROP_UNKN_NONE== 1,2,0))
cdata1$HOUSING <- ifelse(cdata1$RENT,1,ifelse(cdata1$OWN_RES== 1,2,0))
head(cdata1)
View(cdata1)
View(cdata)
cdata2 <- cdata1[c(2,3,32,10,11,12,13,33,19,20,21,22,25,26,27,28,31)]
View(cdata2)
cdata2 <- cdata1[c(1,2,3,32,10,11,12,13,33,19,20,21,22,25,26,27,28,31)]
View(cdata2)
cdata2 <- cdata1[c(1,2,3,32,5,6,7,8,10,11,12,13,33,19,20,21,22,25,26,27,28,31)]
View(cdata2)
cdata2 <- cdata1[c(1,2,3,32,10,11,12,13,33,19,20,21,22,25,26,27,28,31)]
cdata2 <- cdata1[c(1,2,3,32,10,11,12,13,33,34,19,35,22,23,36,26,27,28,29,30,31)]
View(cdata2)
ctable <- as.data.frame(table(cdata$SAV_ACCT, cdata$DEFAULT))
names(ctable) <- c('savingsTotal', 'goodBad', 'counts')
ggplot(data=ctable, aes(x=savingsTotal, y=counts, fill=goodBad)) +
geom_bar(stat="identity") + ylab(" ") + ggtitle("goodBad vs savingsTotal")
str(cdata2)
cdata1$PURPOSE <- as.numeric(ifelse(cdata1$NEW_CAR == 1,1,ifelse(cdata1$USED_CAR == 1,2,
ifelse(cdata1$FURNITURE == 1,3,ifelse(cdata1$RADIO.TV == 1,4,
ifelse(cdata1$EDUCATION == 1,5, ifelse(cdata1$RETRAINING == 1,6, "")))))))
cdata1$STATUS <- ifelse(cdata1$MALE_DIV,1,ifelse(cdata1$MALE_SINGLE== 1,2,
ifelse(cdata1$MALE_MAR_or_WID == 1,3, 0)))
cdata1$DEBTORS <- ifelse(cdata1$CO.APPLICANT,1,ifelse(cdata1$GUARANTOR== 1,2,0))
cdata1$PROPERTY <- ifelse(cdata1$REAL_ESTATE,1,ifelse(cdata1$PROP_UNKN_NONE== 1,2,0))
cdata1$HOUSING <- ifelse(cdata1$RENT,1,ifelse(cdata1$OWN_RES== 1,2,0))
cdata2 <- cdata1[c(1,2,3,32,10,11,12,13,33,34,19,35,22,23,36,26,27,28,29,30,31)]
str(cdata2)
hist(cdata2$AGE)
ggplot(data = cdata2, aes(x = cdata2$AGE, fill = cdata2$DEFAULT)) + geom_histogram()
table(cdata2$CHK_ACCT)
table(cdata2$SAV_ACCT)
summary(cdata2$AMOUNT)
summary(cdata2$DURATION)
table(cdata2$DEFAULT)
str(cdata1)
library(plotly)
library(magrittr)
cdata <- read.csv("C:/Users/Dell/Desktop/DAT650/Project/credit.csv",header = T)
cdata1 <- cdata[-1]
cdata1$DEFAULT <- as.factor(ifelse(cdata1$DEFAULT == 1, "Default", "Non Default"))
str(cdata1)
cdata1$PURPOSE <- as.factor(ifelse(cdata1$NEW_CAR == 1,1,ifelse(cdata1$USED_CAR == 1,2,
ifelse(cdata1$FURNITURE == 1,3,ifelse(cdata1$RADIO.TV == 1,4,
ifelse(cdata1$EDUCATION == 1,5, ifelse(cdata1$RETRAINING == 1,6, "")))))))
cdata1$STATUS <- ifelse(cdata1$MALE_DIV,1,ifelse(cdata1$MALE_SINGLE== 1,2,
ifelse(cdata1$MALE_MAR_or_WID == 1,3, 0)))
cdata1$DEBTORS <- ifelse(cdata1$CO.APPLICANT,1,ifelse(cdata1$GUARANTOR== 1,2,0))
cdata1$PROPERTY <- ifelse(cdata1$REAL_ESTATE,1,ifelse(cdata1$PROP_UNKN_NONE== 1,2,0))
cdata1$HOUSING <- ifelse(cdata1$RENT,1,ifelse(cdata1$OWN_RES== 1,2,0))
cdata2 <- cdata1[c(1,2,3,32,10,11,12,13,33,34,19,35,22,23,36,26,27,28,29,30,31)]
str(cdata2)
require(caret)
install.packages("caret")
require(caret)
data("GermanCredit")
View(GermanCredit)
g_data <- data("GermanCredit")
str(g_data)
str("GermanCredit")
str(g_data)
str(GermanCredit)
library(readr)
german_credit <- read_csv("C:/Users/Dell/Downloads/german_credit.csv")
View(german_credit)
str(german_credit)
credit_data <- read_csv("C:/Users/Dell/Downloads/german_credit.csv")
str(credit_data)
library(plotly)
library(magrittr)
cdata <- read.csv("C:/Users/Dell/Desktop/DAT650/Project/credit.csv",header = T)
cdata1 <- cdata[-1]
cdata1$DEFAULT <- as.factor(ifelse(cdata1$DEFAULT == 1, "Default", "Non Default"))
str(cdata1)
cdata1$PURPOSE <- as.factor(ifelse(cdata1$NEW_CAR == 1,1,ifelse(cdata1$USED_CAR == 1,2,
ifelse(cdata1$FURNITURE == 1,3,ifelse(cdata1$RADIO.TV == 1,4,
ifelse(cdata1$EDUCATION == 1,5, ifelse(cdata1$RETRAINING == 1,6, "")))))))
cdata1$STATUS <- ifelse(cdata1$MALE_DIV,1,ifelse(cdata1$MALE_SINGLE== 1,2,
ifelse(cdata1$MALE_MAR_or_WID == 1,3, 0)))
cdata1$DEBTORS <- ifelse(cdata1$CO.APPLICANT,1,ifelse(cdata1$GUARANTOR== 1,2,0))
cdata1$PROPERTY <- ifelse(cdata1$REAL_ESTATE,1,ifelse(cdata1$PROP_UNKN_NONE== 1,2,0))
cdata1$HOUSING <- ifelse(cdata1$RENT,1,ifelse(cdata1$OWN_RES== 1,2,0))
head(cdata1)
sorted_data <- cdata1[c(1,2,3,32,10,11,12,13,33,34,19,35,22,23,36,26,27,28,29,30,31)]
str(sorted_data)
cdata1$PURPOSE <- (ifelse(cdata1$NEW_CAR == 1,1,ifelse(cdata1$USED_CAR == 1,2,
ifelse(cdata1$FURNITURE == 1,3,ifelse(cdata1$RADIO.TV == 1,4,
ifelse(cdata1$EDUCATION == 1,5, ifelse(cdata1$RETRAINING == 1,6, "")))))))
cdata1$STATUS <- ifelse(cdata1$MALE_DIV,1,ifelse(cdata1$MALE_SINGLE== 1,2,
ifelse(cdata1$MALE_MAR_or_WID == 1,3, 0)))
cdata1$DEBTORS <- ifelse(cdata1$CO.APPLICANT,1,ifelse(cdata1$GUARANTOR== 1,2,0))
cdata1$PROPERTY <- ifelse(cdata1$REAL_ESTATE,1,ifelse(cdata1$PROP_UNKN_NONE== 1,2,0))
cdata1$HOUSING <- ifelse(cdata1$RENT,1,ifelse(cdata1$OWN_RES== 1,2,0))
head(cdata1)
sorted_data <- cdata1[c(1,2,3,32,10,11,12,13,33,34,19,35,22,23,36,26,27,28,29,30,31)]
str(sorted_data)
library(plotly)
library(magrittr)
cdata <- read.csv("C:/Users/Dell/Desktop/DAT650/Project/credit.csv",header = T)
cdata1 <- cdata[-1]
cdata1$DEFAULT <- as.factor(ifelse(cdata1$DEFAULT == 1, "Default", "Non Default"))
str(cdata1)
cdata1$PURPOSE <- as.integer((ifelse(cdata1$NEW_CAR == 1,1,ifelse(cdata1$USED_CAR == 1,2,
ifelse(cdata1$FURNITURE == 1,3,ifelse(cdata1$RADIO.TV == 1,4,
ifelse(cdata1$EDUCATION == 1,5, ifelse(cdata1$RETRAINING == 1,6, ""))))))))
cdata1$STATUS <- as.integer(ifelse(cdata1$MALE_DIV,1,ifelse(cdata1$MALE_SINGLE== 1,2,
ifelse(cdata1$MALE_MAR_or_WID == 1,3, 0))))
cdata1$DEBTORS <- as.integer(ifelse(cdata1$CO.APPLICANT,1,ifelse(cdata1$GUARANTOR== 1,2,0)))
cdata1$PROPERTY <- as.integer(ifelse(cdata1$REAL_ESTATE,1,ifelse(cdata1$PROP_UNKN_NONE== 1,2,0)))
cdata1$HOUSING <- as.integer(ifelse(cdata1$RENT,1,ifelse(cdata1$OWN_RES== 1,2,0)))
head(cdata1)
sorted_data <- cdata1[c(1,2,3,32,10,11,12,13,33,34,19,35,22,23,36,26,27,28,29,30,31)]
str(sorted_data)
table(sorted_data$CHK_ACCT)
table(sorted_data$SAV_ACCT)
summary(sorted_data$AMOUNT)
summary(sorted_data$DURATION)
table(sorted_data$DEFAULT)
dim(sorted_data)
summary(sorted_data$AMOUNT)
summary(sorted_data$DURATION)
sorted_data %>% plot_ly(x = sorted_data$DEFAULT, type = "histogram") %>% layout(title = "Histogram of Default vs Non-Default")
sorted_data %>% plot_ly(x = ~AGE, y = ~AMOUNT, color = ~DEFAULT, colors = c("grey", "blue"),
type = "scatter", mode = "markers" ) %>% layout(title = "Age vs creditAmount by Loan Default")
sorted_data %>% plot_ly(x = ~AGE, y = ~AMOUNT, color = ~DEFAULT, colors = c("red", "blue"),
type = "scatter", mode = "markers" ) %>% layout(title = "Age vs creditAmount by Loan Default")
ctable <- as.data.frame(table(sorted_data$SAV_ACCT, sorted_data$DEFAULT))
names(ctable) <- c('savingsTotal', 'goodBad', 'counts')
ggplot(data=ctable, aes(x=savingsTotal, y=counts, fill=goodBad)) +
geom_bar(stat="identity") + ylab(" ") + ggtitle("goodBad vs savingsTotal")
ggplot(data=ctable, aes(x=savingsTotal, y=counts, fill=loanstatus)) +
geom_bar(stat="identity") + ylab(" ") + ggtitle("Loan Status vs Savings Amount")
names(ctable) <- c('savingsTotal', 'Loan Status', 'counts')
ggplot(data=ctable, aes(x=savingsTotal, y=counts, fill=DEFAULT)) +
geom_bar(stat="identity") + ylab(" ") + ggtitle("Loan Status vs savingsTotal")
ctable <- as.data.frame(table(sorted_data$SAV_ACCT, sorted_data$DEFAULT))
names(ctable) <- c('savingsTotal', 'Loan Status', 'counts')
ggplot(data=ctable, aes(x=savingsTotal, y=counts, fill=DEFAULT)) +
geom_bar(stat="identity") + ylab(" ") + ggtitle("Loan Status vs savingsTotal")
names(ctable) <- c('savingsTotal', 'DEFAULT', 'counts')
ggplot(data=ctable, aes(x=savingsTotal, y=counts, fill=DEFAULT)) +
geom_bar(stat="identity") + ylab(" ") + ggtitle("Loan Status vs savingsTotal")
ggplot(data = sorted_data, aes(x = sorted_data$AGE,
fill = sorted_data$DEFAULT)) + geom_histogram() + theme(plot.title = element_text(hjust = 0.5))
ggplot(data=ctable, aes(x=savingsTotal, y=counts, fill=DEFAULT)) +
geom_bar(stat="identity") + ylab(" ") + ggtitle("Loan Status vs Total Savings") +
theme(plot.title = element_text(hjust = 0.5))
names(ctable) <- c('savingsTotal', 'Default', 'counts')
ggplot(data=ctable, aes(x=savingsTotal, y=counts, fill=Default)) +
geom_bar(stat="identity") + ylab(" ") + ggtitle("Loan Status vs Total Savings") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data=ctable, aes(x=Savings Acct, y=counts, fill=Default)) +
geom_bar(stat="identity") + ylab(" ") + ggtitle("Loan Status vs Total Savings") +
theme(plot.title = element_text(hjust = 0.5))
names(ctable) <- c('Savings Acct', 'Default', 'counts')
ggplot(data=ctable, aes(x=Savings Acct, y=counts, fill=Default)) +
geom_bar(stat="identity") + ylab(" ") + ggtitle("Loan Status vs Total Savings") +
theme(plot.title = element_text(hjust = 0.5))
names(ctable) <- c('Savings Acct', 'Default', 'counts')
ggplot(data=ctable, aes(x=SAV_ACCT, y=counts, fill=Default)) +
geom_bar(stat="identity") + ylab(" ") + ggtitle("Loan Status vs Total Savings") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data=ctable, aes(x=SavingsAcct, y=counts, fill=Default)) +
geom_bar(stat="identity") + ylab(" ") + ggtitle("Loan Status vs Total Savings") +
theme(plot.title = element_text(hjust = 0.5))
names(ctable) <- c('Savings Acct', 'Default', 'counts')
ggplot(data=ctable, aes(x=savingsTotal, y=counts, fill=Default)) +
geom_bar(stat="identity") + ylab(" ") + ggtitle("Loan Status vs Total Savings") +
theme(plot.title = element_text(hjust = 0.5))
names(ctable) <- c('savingsTotal', 'Default', 'counts')
ggplot(data=ctable, aes(x=savingsTotal, y=counts, fill=Default)) +
geom_bar(stat="identity") + ylab(" ") + ggtitle("Loan Status vs Total Savings") +
theme(plot.title = element_text(hjust = 0.5))
library(rpart)
mtree <- rpart(DEFAULT~., data = train, method="class", control = rpart.control(minsplit = 20, minbucket = 7,
maxdepth = 10, usesurrogate = 2, xval =10 ))
gdata <- sort(sample(nrow(sorted_data), nrow(sorted_data)*0.7))
train <- sorted_data[gdata,]
library(rpart)
mtree <- rpart(DEFAULT~., data = train, method="class", control = rpart.control(minsplit = 20, minbucket = 7,
maxdepth = 10, usesurrogate = 2, xval =10 ))
mtree
plot(mtree)
text(mtree)
install.packages("rattle")
library(rattle)
fancyRpartPlot(mtree)
install.packages("rpart.plot")
fancyRpartPlot(mtree)
prp(mtree, faclen = 0, cex = 0.8, extra = 1)
install.packages("prp")
prp(mtree, faclen = 0, cex = 0.8, extra = 1)
library(prp)
library(rpart.plot)
prp(mtree, faclen = 0, cex = 0.8, extra = 1)
library(RColorBrewer)
prp(mtree, faclen = 0, cex = 0.8, extra = 1)
summary(mtree)
printcp(mtree)
